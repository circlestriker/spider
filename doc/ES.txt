java port 9300.其他语言接口的端口是9200
The Java client must be from the same major version of Elasticsearch as the nodes.

index name或者type name可以用来区分频道。
一个索引由一个名字来 标识（必须全部是小写字母的），并且当我们要对这个索引中的文档进行索引、搜索、更新和删除的时候，都要使用到这个名字。在一个集群中，你能够创建任意多个索引。

文档以JSON格式来表示

实际上，您可以将 Elasticsearch 文档类型简单地视为子索引或表名称。

在索引创建之后，你可以在任何时候动态地改变复制的数量，但是你不能再改变分片的数量。


过滤器不会计算相关度的得分，所以它们在计算上更快一些
过滤器可以被缓存到内存中，这使得在重复的搜索查询上，其要比相应的查询快出许多。

存数据时，type不能是中文

搜索一个索引有5个主分片和5个索引各有一个分片事实上是一样的。

Elasticsearch中每个文档都有版本号，每当文档变化（包括删除）都会使_version增加。

PUT方法——“在这个URL中存储文档”变成了POST方法——"在这个类型下存储文档"。

如果你想做的只是检查文档是否存在——你对内容完全不感兴趣——使用HEAD方法来代替GET。HEAD请求不会返回响应体，只有HTTP头

********************************************************************************
查询索引基本信息:
curl -XGET "http://localhost:9200/spiderinfo"

查看节点列表
curl 'localhost:9200/_cat/nodes?v'

列出所有的索引
curl 'localhost:9200/_cat/indices?v'

如果我们不想返回完整的源文档，我们可以指定返回的几个字段。
下面这个例子说明了从搜索中只返回两个字段account_number和balance（当然，这两个字段都是指_source中的字段），以下是具体的搜索：
curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": { "match_all": {} },
  "_source": ["account_number", "balance"]
}'
注意到上面的例子简化了_source字段,它仍将会返回一个叫做_source的字段，但是仅仅包含account_number和balance两个字段。

查询所有category:
在spiderinfo索引中查询所有的category字段。

查询所有的网站名
curl -XPOST 'localhost:9200/spiderinfo/_search?pretty' -d '
{
  "query": { "match_all": {} },
  "_source": ["siteName"]
}'

查询索引spiderinfo下类型spiderinfo下所有模板的网站名 //和上一个查询返回一样的结果
curl -XPOST 'localhost:9200/spiderinfo,spiderinfo/_search?pretty' -d '
{
  "query": { "match_all": {} },
  "_source": ["siteName"]
}'

删除一个doc
curl -XDELETE 'localhost:9200/commons/sports/1'

删索引
win% curl -XDELETE 'localhost:9200/commons'
{"acknowledged":true}%

查询siteName包含新闻的记录
QueryStringQueryBuilder queryStringQueryBuilder = new QueryStringQueryBuilder("新闻");
queryStringQueryBuilder.field("siteName");
searchRequestBuilder.setQuery(queryStringQueryBuilder)

GET /megacorp/employee/_search?q=last_name:Smith
我们在请求中依旧使用_search关键字，然后将查询语句传递给参数q=。这样就可以得到所有姓氏为Smith的结果。

只要content字段且pretty展示
http://192.168.0.100:9200/commons/sports/_search?_source=content&&pretty

只取content,title字段。添加字段继续用逗号隔开
http://192.168.0.100:9200/commons/sports/_search?_source=content,title&pretty

指定id(741cf432c1ecc0408a6d529d5b1a719d)取文档
http://192.168.0.100:9200/commons/sports/741cf432c1ecc0408a6d529d5b1a719d?_source=content,title&pretty

存入文档
curl -XPUT 'localhost:9200/website/blog/1' -d '
{
  "title": "My first blog entry",
  "text":  "Just trying this out...",
  "date":  "2014/01/01"
}'
***************************************todo*****************************************

http://116.213.92.190:9200/website/blog/_search?pretty&from=0
